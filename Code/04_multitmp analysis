# time series analysis in R
install.packages("ggridges") #serve per creare ridgeline plot, c'è una funzione di imagery che richiama questo
library(terra)
library(imageRy)
library(ggridges) # for ridgeline plots
library(ggplot2) # for ridgeline plots
library(viridis) # for ridgeline plots


listing the data
im.list()

# Importing data
EN01 <- im.import("EN_01.png")
EN13 <- im.import("EN_13.png")

difEN = EN01[[1]] - EN13[[1]]

# Example 2: ice melt in Greenland

gr <- im.import("greenland")
plot(gr[[1]])
plot(gr[[4]])

# Exercise: plot in a multiframe the first and last elements of gr
par(mfrow=c(1,2))
plot(gr[[1]])
plot(gr[[4]])

difgr = gr[[1]] - gr[[4]]
dev.off()
plot(difgr)

# Exercise: compose a RGB image with the years of Greenland temperature
im.plotRGB(gr, r=1, g=2, b=4)
# gr: 2000, 2005, 2010, 2015

# Ridgeline plots
# Example with NDVI data

# NDVI file
ndvi <- im.import("NDVI_2020")

plot(ndvi)

plot(ndvi[[2]],ndvi[[3]])
abline(0,1,col="red")


# R code for performing multitemporal analysis

library(imageRy)
library(terra)
library(viridis)

im.list()

EN_01 = im.import("EN_01.png")
EN_01 = flip(EN_01)
plot(EN_01)

EN_13 = im.import("EN_13.png")
EN_13 = flip(EN_13)
plot(EN_13)

# Exercise: plot the two images one beside the other
im.multiframe(1,2)
plot(EN_01)
plot(EN_13)

ENdif = EN_01[[1]] - EN_13[[1]]
plot(ENdif)
plot(ENdif, col=inferno(100))

#-------

# Greenland ice melt

gr = im.import("greenland")

im.multiframe(1,2)
plot(gr[[1]], col=rocket(100))
plot(gr[[4]], col=rocket(100))

grdif = gr[[4]] - gr[[1]] # 2015 - 2000
plot(grdif)
# All the yellow parts are those in which there is a higher value in 2015

# Exporting data
setwd("/Users/ducciorocchini/Downloads")
setwd("~/Desktop")
# Windowds users: C://comp/Downloads
# \
# setwd("C://nome/Downloads")

getwd()

plot(gr)

png("greenland_output.png")
plot(gr)
dev.off()

pdf("greenland_output.pdf")
plot(gr)
dev.off()

pdf("difgreen.pdf")
plot(grdif)
dev.off()

jpeg("difgreen.jpeg")
plot(grdif)
dev.off()



#lezione 20 marzo
library(ggplot2)
library(ggridges)

im.ridgeline 
#ridgeline plots
gr=im.import("greenland")
im.ridgeline(gr,scale=1)

im.ridgeline(gr,scale=2)
im.ridgeline(gr,scale=2, palette="inferno")


#import the NDVI data from sentinel 
sent=im.import("Sentinel2")

im.ridgeline(sent, scale=2) #chiamandosi tutti ndvi sovrascrive in un'unica curva
#changing names attraverso la funzione names()
#sources     : Sentinel2_NDVI_2020-02-21.tif  
 #             Sentinel2_NDVI_2020-05-21.tif  
  #            Sentinel2_NDVI_2020-08-01.tif  
   #           Sentinel2_NDVI_2020-11-27.tif  

names(sent)= c("02_Feb","05_May","08_Aug","11_Nov") #importante mettere lo 0 davanti
im.ridgeline(sent, scale=2, palette="mako")

pairs(sent)
plot(sent[[1]], sent[[2]]) #pixel di febbraio rispetto maggio
plot(sent[[1]], sent[[2]], col="gray")

#aggiungo una linea per capire dove i dati sarebbero se fossero uguali, nel momento in cui y=x
#may=y, feb=x
#una fuzione che descrive una linea è y=a+bx
#a=0 intercetta, b=1 pendenza
#y=a+bx=0+1x=x
abline(0,1, col="red")

#mettiamo i due dataset con gli stessi range

plot(sent[[1]], sent[[2]], xlim=c(-0.3,0.9), ylim=c(-0.3,0.9)) #serve per fare le cose uguali oer i dati, questo ci dice che i pixel sopra alla linea indicano dati più alti a maggio che a febbraio (che va bene)
abline(0,1, col="red")

im.multiframe(1,3)
plot(sent[[1]])
plot(sent[[2]])
plot(sent[[1]], sent[[2]], xlim=c(-0.3,0.9), ylim=c(-0.3,0.9))
abline(0,1, col="red") 
#ho preso i dati per capire come si distribuiscono i punti
